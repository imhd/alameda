---
apiVersion: v1
kind: Namespace
metadata:
  name: alameda
---
apiVersion: v1
kind: Service
metadata:
  name: datahub
  namespace: alameda
  labels:
    app: datahub
spec:
  selector:
    app: datahub
  ports:
  - port: 50050
    name: grpc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: datahub
  namespace: alameda
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alameda-datahub-role
rules:
# Permission for query prometheus under namespace openshift-monitoring 
- apiGroups: 
  - ""
  resources: 
  - namespaces
  verbs: 
  - get
- apiGroups:
  - autoscaling.containers.ai
  resources:
  - alamedarecommendations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: alameda-datahub
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alameda-datahub-role
subjects:
- kind: ServiceAccount
  name: datahub
  namespace: alameda
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: datahub
  name: datahub
  namespace: alameda
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datahub
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: datahub
        deploymentconfig: datahub
    spec:
      containers:
      - image: datahub:latest
        imagePullPolicy: IfNotPresent
        name: datahub
        env:
        - name: ALAMEDA_DATAHUB_INFLUXDB_ADDRESS
          value: http://influxdb.monitoring:8086
        - name: ALAMEDA_DATAHUB_INFLUXDB_USERNAME
          value: alameda
        - name: ALAMEDA_DATAHUB_INFLUXDB_PASSWORD
          value: alameda
        - name: ALAMEDA_DATAHUB_PROMETHEUS_TLS_CONFIG_INSECURE_SKIP_VERIFY
          value: "true"
        - name: ALAMEDA_DATAHUB_PROMETHEUS_BEARER_TOKEN_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: ALAMEDA_DATAHUB_PROMETHEUS_URL
          value: http://prometheus.monitoring:9090
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: datahub
      serviceAccountName: datahub
      terminationGracePeriodSeconds: 30
