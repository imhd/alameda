// This file has messages related to metric data of containers, pods, and nodes

syntax = "proto3";

package containersai.alameda.v1alpha1.datahub.metrics;

import "alameda_api/v1alpha1/datahub/common/metrics.proto";
import "alameda_api/v1alpha1/datahub/common/queries.proto";
import "alameda_api/v1alpha1/datahub/metrics/metrics.proto";
import "alameda_api/v1alpha1/datahub/metrics/types.proto";
import "alameda_api/v1alpha1/datahub/resources/metadata.proto";
import "alameda_api/v1alpha1/datahub/schemas/types.proto";
import "google/rpc/status.proto";

option go_package = "github.com/containers-ai/api/alameda_api/v1alpha1/datahub/metrics";

// Represents a request for creating metrics data of pods
message CreatePodMetricsRequest {
    repeated PodMetric pod_metrics = 1;
    uint64             rate_range  = 2;
}

message CreateControllerMetricsRequest {
    repeated ControllerMetric controller_metrics = 1;
}

message CreateApplicationMetricsRequest {
    repeated ApplicationMetric application_metrics = 1;
}

message CreateNamespaceMetricsRequest {
    repeated NamespaceMetric namespace_metrics = 1;
}

// Represents a request for creating metrics data of nodes
message CreateNodeMetricsRequest {
    repeated NodeMetric node_metrics = 1;
}

message CreateClusterMetricsRequest {
    repeated ClusterMetric cluster_metrics = 1;
}

// Represents a request for listing metric data of a pod
message ListPodMetricsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    repeated common.MetricType    metric_types    = 3;
    uint64                        rate_range      = 4;
}

// Represents a response for a listing pod metric data request
message ListPodMetricsResponse {
    google.rpc.Status  status      = 1;
    repeated PodMetric pod_metrics = 2;
}

message ListControllerMetricsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    repeated common.MetricType    metric_types    = 3;
    resources.Kind                kind            = 4;
}

message ListControllerMetricsResponse {
    google.rpc.Status         status             = 1;
    repeated ControllerMetric controller_metrics = 2;
}

message ListApplicationMetricsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    repeated common.MetricType    metric_types    = 3;
}

message ListApplicationMetricsResponse {
    google.rpc.Status          status              = 1;
    repeated ApplicationMetric application_metrics = 2;
}

message ListNamespaceMetricsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    repeated common.MetricType    metric_types    = 3;
}

message ListNamespaceMetricsResponse {
    google.rpc.Status        status            = 1;
    repeated NamespaceMetric namespace_metrics = 2;
}

// Represents a request for listing metric data of a node
message ListNodeMetricsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    repeated common.MetricType    metric_types    = 3;
}

// Represents a response for a listing node metrics request
message ListNodeMetricsResponse {
    google.rpc.Status   status       = 1;
    repeated NodeMetric node_metrics = 2;
}

message ListClusterMetricsRequest {
    common.QueryCondition         query_condition = 1;
    repeated resources.ObjectMeta object_meta     = 2;
    repeated common.MetricType    metric_types    = 3;
}

message ListClusterMetricsResponse {
    google.rpc.Status      status          = 1;
    repeated ClusterMetric cluster_metrics = 2;
}

message CreateMetricsRequest {
    schemas.SchemaMeta   schema_meta = 1;
    repeated WriteMetric metrics     = 2;
}

message ListMetricsRequest {
    common.QueryCondition      query_condition = 1;
    schemas.SchemaMeta         schema_meta     = 2;
    repeated common.MetricType metric_types    = 3;
}

message ListMetricsResponse {
    google.rpc.Status status  = 1;
    Metric            metrics = 2;
}
